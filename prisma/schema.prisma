// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id          Int           @id @default(autoincrement())
  username    String        @unique
  password    String
  email       String        @unique
  budget      Decimal       @db.Decimal(10,2) @default(0)
  created_at  DateTime      @default(now())
  updated_at  DateTime      @default(now())
  role        String?       @default("wargaSipil")
  sholat_tracker Sholat[]
  tadarus_tracker     Tadarus[]
  puasa_tracker Puasa[]
  ceramah_tracker Ceramah[]

  @@map("user")
}

model Sholat {
  id        Int      @id @default(autoincrement())
  date String
  subuh Boolean
  dzuhur Boolean
  ashar Boolean
  maghrib Boolean
  isya Boolean
  tarawih Boolean
  notes String?
  userId    Int?
  timestamp DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])

  @@map("sholat_tracker")
}

model Tadarus {
  id          Int       @id @default(autoincrement())
  date String
  surah String
  ayat String
  userId      Int?
  notes String?


  User User? @relation(fields: [userId], references: [id])

  @@map("tadarus_tracker")
}

model Puasa {
  id          Int       @id @default(autoincrement())
  date String
  isFasting Boolean
  notes String
  userId      Int?

  User User? @relation(fields: [userId], references: [id])

    @@map("puasa_trakcer")
}

model Ceramah {
  id          Int       @id @default(autoincrement())
  date String
  pembicara String
  judul String
  uraian String
  notes String?
  userId      Int?


  User User? @relation(fields: [userId], references: [id])

    @@map("ceramah_tracker")
}